{
  "private": true,
  "version": "0.2.0",
  "name": "moon-console",
  "publisher": "moonrepo",
  "displayName": "moon console",
  "description": "Control panel and integrated console for moon.",
  "icon": "assets/moon-banner.png",
  "galleryBanner": {
    "color": "#00111e",
    "theme": "dark"
  },
  "markdown": "github",
  "keywords": [
    "moon",
    "moonrepo",
    "build",
    "system",
    "console",
    "projects",
    "tasks"
  ],
  "engines": {
    "vscode": "^1.66.0"
  },
  "categories": [
    "Testing",
    "Other"
  ],
  "sponsor": {
    "url": "https://github.com/moonrepo/dev"
  },
  "qna": "https://github.com/moonrepo/dev/discussions",
  "homepage": "https://github.com/moonrepo/dev/tree/master/packages/vscode-extension",
  "repository": {
    "type": "git",
    "url": "git@github.com:moonrepo/dev.git",
    "directory": "packages/vscode-extension"
  },
  "activationEvents": [
    "onCommand:moon.openSettings",
    "onCommand:moon.runTargetByInput",
    "onView:moonProjects",
    "onView:moonProjectsExternal",
    "onView:moonLastRun",
    "workspaceContains:moon.yml"
  ],
  "main": "./lib/extension.js",
  "contributes": {
    "configuration": {
      "id": "moon",
      "type": "object",
      "title": "moon",
      "properties": {
        "moon.binPath": {
          "type": "string",
          "default": "node_modules/@moonrepo/cli/moon",
          "markdownDescription": "Path to the moon binary, relative from the `moon.workspaceRoot` setting."
        },
        "moon.workspaceRoot": {
          "type": "string",
          "default": ".",
          "markdownDescription": "Relative path from the editor root to moon's [workspace root](https://moonrepo.dev/docs/concepts/workspace)."
        }
      }
    },
    "commands": [
      {
        "command": "moon.openSettings",
        "title": "moon: Open settings"
      },
      {
        "command": "moon.refreshProjects",
        "title": "moon: Refresh projects",
        "icon": "$(refresh)"
      },
      {
        "command": "moon.checkProject",
        "title": "moon: Run all buildable and testable targets",
        "icon": "$(run-all)"
      },
      {
        "command": "moon.runTarget",
        "title": "moon: Run the target",
        "icon": "$(run)"
      },
      {
        "command": "moon.runTargetByInput",
        "title": "moon: Run one or many targets"
      },
      {
        "command": "moon.viewProject",
        "title": "moon: View selected project",
        "icon": "$(open-preview)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "moon.refreshProjects",
          "when": "moon.hasBinary"
        },
        {
          "command": "moon.checkProject",
          "when": "false"
        },
        {
          "command": "moon.runTarget",
          "when": "false"
        },
        {
          "command": "moon.runTargetByInput",
          "when": "moon.hasBinary"
        },
        {
          "command": "moon.viewProject",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "moon.refreshProjects",
          "when": "view == moonProjects && moon.hasBinary",
          "group": "navigation"
        },
        {
          "command": "moon.refreshProjects",
          "when": "view == moonProjectsExternal && moon.hasBinary",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "moon.runTarget",
          "when": "view == moonProjects && viewItem == projectTask",
          "group": "inline"
        },
        {
          "command": "moon.viewProject",
          "when": "view == moonProjects && viewItem == project",
          "group": "inline@0"
        },
        {
          "command": "moon.checkProject",
          "when": "view == moonProjects && viewItem == project",
          "group": "inline@1"
        },
        {
          "command": "moon.runTarget",
          "when": "view == moonProjectsExternal && viewItem == projectTask",
          "group": "inline"
        },
        {
          "command": "moon.viewProject",
          "when": "view == moonProjectsExternal && viewItem == project",
          "group": "inline@0"
        },
        {
          "command": "moon.checkProject",
          "when": "view == moonProjectsExternal && viewItem == project",
          "group": "inline@1"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "moonConsole",
          "title": "moon console",
          "icon": "assets/moon.svg"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "moonProjectsExternal",
          "name": "moon"
        }
      ],
      "moonConsole": [
        {
          "id": "moonProjects",
          "name": "Projects"
        },
        {
          "id": "moonLastRun",
          "name": "Last run",
          "type": "webview",
          "when": "moon.inWorkspaceRoot"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "moonProjects",
        "contents": "Unable to find the workspace root. Has moon been installed?\n[Install moon](https://moonrepo.dev/docs/install)\nIf moon was installed in a sub-folder, update the [moon.workspaceRoot](command:moon.openSettings) setting.",
        "when": "!moon.inWorkspaceRoot"
      },
      {
        "view": "moonProjects",
        "contents": "Unable to find moon's binary. Has the [@moonrepo/cli](https://www.npmjs.com/package/@moonrepo/cli) package been installed?\n[Learn more](https://moonrepo.dev/docs/install)\nThe path to moon's binary can be customized with the [moon.binPath](command:moon.openSettings) setting.",
        "when": "moon.inWorkspaceRoot && !moon.hasBinary"
      },
      {
        "view": "moonProjectsExternal",
        "contents": "Unable to find the workspace root. Has moon been installed?\n[Install moon](https://moonrepo.dev/docs/install)\nIf moon was installed in a sub-folder, update the [moon.workspaceRoot](command:moon.openSettings) setting.",
        "when": "!moon.inWorkspaceRoot"
      },
      {
        "view": "moonProjectsExternal",
        "contents": "Unable to find moon's binary. Has the [@moonrepo/cli](https://www.npmjs.com/package/@moonrepo/cli) package been installed?\n[Learn more](https://moonrepo.dev/docs/install)\nThe path to moon's binary can be customized with the [moon.binPath](command:moon.openSettings) setting.",
        "when": "moon.inWorkspaceRoot && !moon.hasBinary"
      }
    ]
  },
  "scripts": {
    "compile": "esbuild src/extension.ts --bundle --outfile=lib/extension.js --external:vscode --format=cjs --platform=node --target=node14",
    "watch": "yarn run compile --sourcemap --watch",
    "package": "vsce package --no-dependencies",
    "publish": "vsce publish --no-dependencies --no-git-tag-version --message 'Release [ci skip]'"
  },
  "dependencies": {
    "@moonrepo/report": "^0.0.2",
    "execa": "^5.1.1"
  },
  "devDependencies": {
    "@moonrepo/types": "^0.0.6",
    "@types/vscode": "^1.66.0",
    "@vscode/test-electron": "^2.1.5",
    "esbuild": "^0.15.12",
    "vsce": "^2.12.0"
  }
}
