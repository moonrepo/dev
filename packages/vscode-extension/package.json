{
  "private": true,
  "version": "0.12.0",
  "name": "moon-console",
  "publisher": "moonrepo",
  "displayName": "moon console",
  "description": "Control panel and integrated console for moon.",
  "icon": "assets/moon-banner.png",
  "galleryBanner": {
    "color": "#00111e",
    "theme": "dark"
  },
  "markdown": "github",
  "keywords": [
    "moon",
    "moonrepo",
    "build",
    "system",
    "console",
    "projects",
    "tasks"
  ],
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Testing",
    "Other"
  ],
  "sponsor": {
    "url": "https://github.com/moonrepo/dev"
  },
  "qna": "https://github.com/moonrepo/dev/discussions",
  "homepage": "https://github.com/moonrepo/dev/tree/master/packages/vscode-extension",
  "repository": {
    "type": "git",
    "url": "https://github.com/moonrepo/moon.git",
    "directory": "packages/vscode-extension"
  },
  "activationEvents": [
    "workspaceContains:.moon",
    "workspaceContains:**/moon.yml"
  ],
  "extensionDependencies": [
    "redhat.vscode-yaml"
  ],
  "main": "./lib/extension.js",
  "contributes": {
    "yamlValidation": [
      {
        "fileMatch": "moon.yml",
        "url": "https://moonrepo.dev/schemas/project.json"
      },
      {
        "fileMatch": "template.yml",
        "url": "https://moonrepo.dev/schemas/template.json"
      },
      {
        "fileMatch": ".moon/tasks.yml",
        "url": "https://moonrepo.dev/schemas/tasks.json"
      },
      {
        "fileMatch": ".moon/tasks/**/*.yml",
        "url": "https://moonrepo.dev/schemas/tasks.json"
      },
      {
        "fileMatch": ".moon/toolchain.yml",
        "url": "https://moonrepo.dev/schemas/toolchain.json"
      },
      {
        "fileMatch": ".moon/workspace.yml",
        "url": "https://moonrepo.dev/schemas/workspace.json"
      }
    ],
    "configuration": {
      "id": "moon",
      "type": "object",
      "title": "moon",
      "properties": {
        "moon.binPath": {
          "type": "string",
          "default": "node_modules/@moonrepo/cli/moon",
          "markdownDescription": "Path to the moon binary, relative from the `moon.rootPrefixes` setting."
        },
        "moon.hideTasks": {
          "type": "array",
          "default": [],
          "markdownDescription": "List of tasks to hide in the projects panel. Accepts fully-qualified or partial targets."
        },
        "moon.logLevel": {
          "type": "string",
          "default": "info",
          "markdownDescription": "The log level to apply to all moon executed commands."
        },
        "moon.rootPrefixes": {
          "type": "array",
          "default": [],
          "markdownDescription": "Relative paths from the editor root to find moon's [workspace root](https://moonrepo.dev/docs/concepts/workspace)."
        }
      }
    },
    "commands": [
      {
        "command": "moon.openSettings",
        "title": "moon: Open settings"
      },
      {
        "command": "moon.runTaskByInput",
        "title": "moon: Run one or many tasks"
      },
      {
        "command": "moon.viewActionGraph",
        "title": "moon: View action graph",
        "icon": "$(gather)"
      },
      {
        "command": "moon.viewProjectGraph",
        "title": "moon: View project graph",
        "icon": "$(type-hierarchy-sub)"
      },
      {
        "command": "moon.projectCategory.refreshProjects",
        "title": "moon: Refresh projects",
        "icon": "$(refresh)"
      },
      {
        "command": "moon.projectCategory.checkProject",
        "title": "moon: Run all buildable and testable tasks for a project",
        "icon": "$(run-all)"
      },
      {
        "command": "moon.projectCategory.runTask",
        "title": "moon: Run the task",
        "icon": "$(run)"
      },
      {
        "command": "moon.projectCategory.viewProject",
        "title": "moon: View selected project",
        "icon": "$(open-preview)"
      },
      {
        "command": "moon.projectTag.refreshProjects",
        "title": "moon: Refresh projects",
        "icon": "$(refresh)"
      },
      {
        "command": "moon.projectTag.checkProject",
        "title": "moon: Run all buildable and testable tasks for a project",
        "icon": "$(run-all)"
      },
      {
        "command": "moon.projectTag.runTask",
        "title": "moon: Run the task",
        "icon": "$(run)"
      },
      {
        "command": "moon.projectTag.viewProject",
        "title": "moon: View selected project",
        "icon": "$(open-preview)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "moon.runTaskByInput",
          "when": "moon.hasBinary"
        },
        {
          "command": "moon.viewActionGraph",
          "when": "moon.hasBinary"
        },
        {
          "command": "moon.viewProjectGraph",
          "when": "moon.hasBinary"
        }
      ],
      "view/title": [
        {
          "command": "moon.projectTag.refreshProjects",
          "when": "view == moonTags && moon.hasBinary",
          "group": "navigation"
        },
        {
          "command": "moon.projectCategory.refreshProjects",
          "when": "view == moonProjects && moon.hasBinary",
          "group": "navigation"
        },
        {
          "command": "moon.projectCategory.refreshProjects",
          "when": "view == moonProjectsExternal && moon.hasBinary",
          "group": "navigation"
        },
        {
          "command": "moon.viewActionGraph",
          "when": "view == moonProjects && moon.hasBinary",
          "group": "navigation"
        },
        {
          "command": "moon.viewActionGraph",
          "when": "view == moonProjectsExternal && moon.hasBinary",
          "group": "navigation"
        },
        {
          "command": "moon.viewProjectGraph",
          "when": "view == moonProjects && moon.hasBinary",
          "group": "navigation"
        },
        {
          "command": "moon.viewProjectGraph",
          "when": "view == moonProjectsExternal && moon.hasBinary",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "moon.projectTag.runTask",
          "when": "view == moonTags && viewItem == projectTask",
          "group": "inline"
        },
        {
          "command": "moon.projectTag.viewProject",
          "when": "view == moonTags && viewItem == project",
          "group": "inline@0"
        },
        {
          "command": "moon.projectTag.checkProject",
          "when": "view == moonTags && viewItem == project",
          "group": "inline@1"
        },
        {
          "command": "moon.projectCategory.runTask",
          "when": "view == moonProjects && viewItem == projectTask",
          "group": "inline"
        },
        {
          "command": "moon.projectCategory.viewProject",
          "when": "view == moonProjects && viewItem == project",
          "group": "inline@0"
        },
        {
          "command": "moon.projectCategory.checkProject",
          "when": "view == moonProjects && viewItem == project",
          "group": "inline@1"
        },
        {
          "command": "moon.projectCategory.runTask",
          "when": "view == moonProjectsExternal && viewItem == projectTask",
          "group": "inline"
        },
        {
          "command": "moon.projectCategory.viewProject",
          "when": "view == moonProjectsExternal && viewItem == project",
          "group": "inline@0"
        },
        {
          "command": "moon.projectCategory.checkProject",
          "when": "view == moonProjectsExternal && viewItem == project",
          "group": "inline@1"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "moonConsole",
          "title": "moon console",
          "icon": "assets/moon.svg"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "moonProjectsExternal",
          "name": "moon"
        }
      ],
      "moonConsole": [
        {
          "id": "moonProjects",
          "name": "Projects"
        },
        {
          "id": "moonTags",
          "name": "Tags"
        },
        {
          "id": "moonLastRun",
          "name": "Last run",
          "type": "webview",
          "when": "moon.inWorkspaceRoot"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "moonProjects",
        "contents": "Unable to find the workspace root. Has moon been installed? Try opening a file.\n[Install moon](https://moonrepo.dev/docs/install)\nIf moon was installed in a sub-folder, update the [moon.rootPrefixes](command:moon.openSettings) setting.",
        "when": "!moon.inWorkspaceRoot"
      },
      {
        "view": "moonProjects",
        "contents": "Unable to find moon's binary. Has the [@moonrepo/cli](https://www.npmjs.com/package/@moonrepo/cli) package or `moon` global been installed?\n[Learn more](https://moonrepo.dev/docs/install)\nThe path to moon's binary can be customized with the [moon.binPath](command:moon.openSettings) setting.",
        "when": "moon.inWorkspaceRoot && !moon.hasBinary"
      },
      {
        "view": "moonProjectsExternal",
        "contents": "Unable to find the workspace root. Has moon been installed? Try opening a file.\n[Install moon](https://moonrepo.dev/docs/install)\nIf moon was installed in a sub-folder, update the [moon.rootPrefixes](command:moon.openSettings) setting.",
        "when": "!moon.inWorkspaceRoot"
      },
      {
        "view": "moonProjectsExternal",
        "contents": "Unable to find moon's binary. Has the [@moonrepo/cli](https://www.npmjs.com/package/@moonrepo/cli) package or `moon` global been installed?\n[Learn more](https://moonrepo.dev/docs/install)\nThe path to moon's binary can be customized with the [moon.binPath](command:moon.openSettings) setting.",
        "when": "moon.inWorkspaceRoot && !moon.hasBinary"
      }
    ]
  },
  "scripts": {
    "compile": "esbuild src/extension.ts --bundle --outfile=lib/extension.js --external:vscode --format=cjs --platform=node --target=node14",
    "watch": "yarn run compile --sourcemap --watch",
    "package": "vsce package --no-dependencies",
    "publish": "vsce publish --no-dependencies --no-git-tag-version --message 'Release [ci skip]'"
  },
  "dependencies": {
    "@moonrepo/report": "^1.2.1",
    "execa": "^5.1.1",
    "semver": "^7.6.2"
  },
  "devDependencies": {
    "@moonrepo/types": "^1.17.2",
    "@types/semver": "^7.5.8",
    "@types/vscode": "1.77.0",
    "@vscode/test-electron": "^2.3.9",
    "esbuild": "^0.20.2",
    "vsce": "^2.15.0"
  }
}
